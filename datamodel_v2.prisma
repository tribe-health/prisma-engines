datasource cordico {
  provider = "postgresql"
  url      = "postgresql://cordico:cordico@127.0.0.1:5435/cordico?schema=public"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByRelation", "nApi", "selectRelationCount", "orderByAggregateGroup", "filterJson", "planetScaleMode", "referentialActions"]
}

model AssetType {
  id         String  @id @default(uuid())
  name          String  @unique
  description        String?
  schema        Json
  mime_types   String[]
  version      Int @default(1)
  created      DateTime @default(now())
  creator_id   String
  updated      DateTime?
  updater_id   String?
  assets   Asset[]

  @@map(name: "asset_types")
}

model Asset {
  id         String  @id @default(uuid())
  name          String  @unique
  asset_type_id  String
  asset_type  AssetType @relation(fields: [asset_type_id], references: [id])
  data       Json
  ipfs_hash   String
  version      Int @default(1)
  created      DateTime @default(now())
  creator_id   String
  updated      DateTime?
  updater_id   String?

  @@map(name: "assets")
}

model User {
  id    String @id @default(uuid())
  identifier String
  data     Json?
  roles    UserRole[]

  @@map(name: "users")
}

model UserRole {
   id    String @id @default(uuid())
   user_id String
   user  User @relation(fields: [user_id], references: [id])
   role_id String
   role Role @relation(fields: [role_id], references: [id])

   @@map(name: "user_roles")
}

model Role {
  id    String @id @default(uuid())
  name String
  users  UserRole[]

  @@map(name: "roles")
}
